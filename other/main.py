def calc_sum_for_adding(resource, current_amount, add_amount, total_dollars, base_rates, base_diamond_price):
    base_value = (1 / base_rates[resource]) * base_diamond_price
    total_sum = 0
    for i in range(add_amount):
        price = (total_dollars * base_value) / (current_amount + i)
        total_sum += price
    return total_sum

def find_amount_for_target_money(resource, current_amount, target_money, total_dollars, base_rates, base_diamond_price):
    n = 0
    while True:
        n += 1
        money = calc_sum_for_adding(resource, current_amount, n, total_dollars, base_rates, base_diamond_price)
        if money >= target_money:
            return n, money

def calc_sum_for_withdrawing(resource, current_amount, withdraw_amount, total_dollars, base_rates, base_diamond_price):
    base_value = (1 / base_rates[resource]) * base_diamond_price
    total_sum = 0
    for i in range(withdraw_amount):
        # –ü—Ä–∏ —Å–Ω—è—Ç–∏–∏ —Ä–µ—Å—É—Ä—Å–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Å—É—Ä—Å–æ–≤ –≤ –±–∞–Ω–∫–µ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è, –ø–æ—ç—Ç–æ–º—É —Ü–µ–Ω–∞ —Ä–∞—Å—Ç–µ—Ç
        price = (total_dollars * base_value) / (current_amount - i)
        total_sum += price
    return total_sum


# –ë–∞–ª–∞–Ω—Å –∫–ª–∏–µ–Ω—Ç–æ–≤ (—Å–∏–º—É–ª–∏—Ä—É–µ–º –∫–∞—Ä—Ç—ã –∏–≥—Ä–æ–∫–æ–≤)
client_balances = {
    "sunny": 5825,
    "dima": 0
}

# –ë–∞–∑–æ–≤—ã–µ –∫—É—Ä—Å—ã (1 –∞–ª–º–∞–∑ = N —Ä–µ—Å—É—Ä—Å–∞)
base_rates = {
    "–ù–µ–∑–µ—Ä–∏—Ç–æ–≤—ã–π —Å–ª–∏—Ç–æ–∫": 0.5,
    "–õ–∞–∑—É—Ä–∏—Ç": 128,
    "–†–µ–¥—Å—Ç–æ—É–Ω": 128,
    "–ó–æ–ª–æ—Ç–æ–π —Å–ª–∏—Ç–æ–∫": 8,
    "–ñ–µ–º—á—É–≥ —ç–Ω–¥–µ—Ä–∞": 2,
    "–ê–ª–º–∞–∑": 1
}

# –ö–æ–ª-–≤–æ —Ä–µ—Å—É—Ä—Å–æ–≤ –≤ –±–∞–Ω–∫–µ
bank_resources = {
    "–ù–µ–∑–µ—Ä–∏—Ç–æ–≤—ã–π —Å–ª–∏—Ç–æ–∫": 9,
    "–õ–∞–∑—É—Ä–∏—Ç": 77 * 9,
    "–†–µ–¥—Å—Ç–æ—É–Ω": 93 * 9,
    "–ó–æ–ª–æ—Ç–æ–π —Å–ª–∏—Ç–æ–∫": 51 * 9 + 6,
    "–ñ–µ–º—á—É–≥ —ç–Ω–¥–µ—Ä–∞": 72,
    "–ê–ª–º–∞–∑": 14 * 9 + 101
}



total_dollars = max(1000, sum(client_balances.values()))

# —Å—Ç–∞—Ä—Ç –∫–∞—Ä—Ç—ã 50$

# –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–ª–º–∞–∑–∞
base_diamond_price = 10

# –°—á–µ—Ç—á–∏–∫ —Ü–µ–Ω—ã –Ω–∞ –≤–∫–ª–∞–¥
target_money = 1000 # —Å–∫–æ–ª—å–∫–æ —Ü–µ–Ω—ã
add_amount = 1  # —Å–∫–æ–ª—å–∫–æ –¥–æ–±–∞–≤–ª—è–µ–º
withdraw_amount = 13 # –°–∫–æ–ª—å–∫–æ —Å–Ω—è—Ç—å –≤–µ—â–µ–π –∏–∑ –±–∞–Ω–∫–∞
resource = "–ê–ª–º–∞–∑"


current_amount = bank_resources[resource]

base_dollar_values = {
    item: (1 / rate) * base_diamond_price
    for item, rate in base_rates.items()
}

print(f"üí≥ –û–±—â–∞—è —Å—É–º–º–∞ $ –≤ —Å–∏—Å—Ç–µ–º–µ: {total_dollars}$\n")
print("üìà –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Ü–µ–Ω—ã (1 —Ä–µ—Å—É—Ä—Å = X $):\n")

for resource_cyc, base_value in base_dollar_values.items():
    amount = bank_resources.get(resource_cyc, 1)
    price = (total_dollars * base_value) / amount
    print(f"{resource_cyc}: {price:.4f} $")

input()


money_gained = calc_sum_for_adding(resource, current_amount, add_amount, total_dollars, base_rates, base_diamond_price)
print(f"–ó–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ {add_amount} {resource} –ø–æ–ª—É—á–∞–µ–º: {money_gained:.2f} $")
input()


needed_amount, gained_money = find_amount_for_target_money(
    resource, current_amount, target_money, total_dollars, base_rates, base_diamond_price
)


print(f"–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ {target_money}$, –Ω—É–∂–Ω–æ –ø–æ–ª–æ–∂–∏—Ç—å {needed_amount} {resource},")
print(f"—ç—Ç–æ –¥–∞—Å—Ç {gained_money:.2f} $.")

input()

# –ù–∞–ø—Ä–∏–º–µ—Ä, –∫–ª–∏–µ–Ω—Ç —Ö–æ—á–µ—Ç —Å–Ω—è—Ç—å 3 "–ù–µ–∑–µ—Ä–∏—Ç–æ–≤—ã—Ö —Å–ª–∏—Ç–∫–∞"

current_amount = bank_resources[resource]

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ –±–∞–Ω–∫–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤
if withdraw_amount > current_amount:
    print("–í –±–∞–Ω–∫–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è —Å–Ω—è—Ç–∏—è!")
else:
    cost = calc_sum_for_withdrawing(resource, current_amount, withdraw_amount, total_dollars, base_rates, base_diamond_price)
    print(f"–î–ª—è —Å–Ω—è—Ç–∏—è {withdraw_amount} {resource} –Ω—É–∂–Ω–æ —Å–ø–∏—Å–∞—Ç—å —Å –∫–ª–∏–µ–Ω—Ç–∞: {cost:.2f} $")
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å –∫–ª–∏–µ–Ω—Ç–∞ –∏ —Å–ø–∏—Å–∞—Ç—å –¥–µ–Ω—å–≥–∏
    # –ò —É–º–µ–Ω—å—à–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Å—É—Ä—Å–æ–≤ –≤ –±–∞–Ω–∫–µ
    bank_resources[resource] -= withdraw_amount
    # –¢–∞–∫–∂–µ —É–º–µ–Ω—å—à–∏—Ç—å total_dollars, –µ—Å–ª–∏ –¥–µ–Ω—å–≥–∏ —É—Ö–æ–¥—è—Ç –∏–∑ —Å–∏—Å—Ç–µ–º—ã